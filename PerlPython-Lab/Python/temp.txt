
# Recursive Python function to solve the tower of hanoi

def TowerOfHanoi(n, source, destination, auxiliary):
    if n == 1:
        print("Move disk 1 from source", source, "to destination", destination)
        return
    TowerOfHanoi(n-1, source, auxiliary, destination)
    print("Move disk", n, "from source", source, "to destination", destination)
    TowerOfHanoi(n-1, auxiliary, destination, source)


# Driver code
n = 3
TowerOfHanoi(n, 'A', 'B', 'C')
# A, C, B are the name of rods

# Contributed By Dilip Jain







def tower_of_hanoi(disks, a, b, c):
    if(disks == 1):
        print('Move disk 1 from rod {} to rod {}.'.format(a, c))
        return
    # function call itself
    tower_of_hanoi(disks - 1, a, c, b)
    print('Move disk {} from rod {} to rod {}.'.format(disks, a, c))
    tower_of_hanoi(disks - 1, b, a, c)


disks = int(input('Enter the number of disks: '))
# We are referring source as A, b as B, and target as C
tower_of_hanoi(disks, 'A', 'B', 'C')  # Calling the function
